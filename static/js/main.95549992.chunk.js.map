{"version":3,"sources":["utilities/axios-utilities.js","store/actionCreators.js","store/actionTypes.js","store/hooks.js","utilities/utilities.js","components/UI/ControlButton/ControlButton.js","components/UI/AutocompleteField/AutocompleteField.js","components/Main/Main.js","components/Options/Option/Option.js","components/Options/Options.js","components/Question/Question.js","components/UI/Button/Button.js","components/QuestionsTablet/QuestionsTablet.js","components/Outcome/Outcome.js","App.js","store/initialState.js","serviceWorker.js","index.js","store/reducer.js","components/UI/AutocompleteField/AutocompleteField.module.scss","components/QuestionsTablet/QuestionsTablet.module.scss","components/Outcome/Outcome.module.scss","components/Question/Question.module.scss","components/UI/ControlButton/ControlButton.module.scss","components/Main/Main.module.scss","components/Options/Option/Option.module.scss","assets/images/outcomeImage.png","components/Options/Options.module.scss","components/UI/Button/Button.module.scss"],"names":["axiosInstance","axios","create","baseURL","headers","Accept","reqCancelNotification","postAnswerRequest","respData","type","payload","getTestRequest","getTopicsRequest","requestFailure","error","requestCreator","config","source","dispatch","a","cancel","CancelToken","title","answerData","post","JSON","stringify","cancelToken","token","reqResponse","data","topic","get","useShallowEqualSelector","selector","useSelector","shallowEqual","scrollToTop","window","scrollTo","top","left","behavior","handleKeyDownCreator","event","keyDownHandler","key","activeClassElector","elector","mainClass","secondClass","parseError","err","parse","Object","getOwnPropertyNames","objectKeysLength","obj","keys","length","ControlButton","innerClass","direction","outerClass","clickHandler","classes","arrowTop","arrowRight","arrowBottom","arrowLeft","className","role","tabIndex","onClick","onKeyDown","defaultProps","AutocompleteField","optionList","label","options","isActive","useDispatch","history","useHistory","useState","activeOption","filteredOptions","showOptions","userInput","completion","setCompletion","active","setActive","e","currentTarget","innerText","changeOptionHandler","nextOption","prevState","map","option","index","optionActive","noShow","continueButton","continueWrapper","push","classNameInUse","useMemo","inputField","inactive","id","name","value","placeholder","onChange","currentUserInput","forFilteredOptions","filter","toLowerCase","indexOf","keyCode","onFocus","onBlur","disabled","autoComplete","htmlFor","includes","Main","memo","useEffect","opts","state","availableTopics","isLoading","main","footer","process","href","rel","target","Option","qNum","oNum","answer","answers","literalOpt","String","fromCharCode","onAddAnswer","qNumParam","oNumParam","questionNumber","optionNumber","addAnswerCreator","activeClasses","Options","optionsData","Question","question","indicator","questionText","answerTitle","propTypes","PropTypes","number","isRequired","oneOfType","string","arrayOf","Button","bName","bValue","isDisabled","children","button","selectRequestResponseState","createSelector","QuestionsTablet","testData","test","author","questions","answ","reqRespLength","isScrollVisible","setIsScrollVisible","returnOnClickHandler","submitAnswersClickHandler","useCallback","toggleScrollVisibility","pageYOffset","document","addEventListener","removeEventListener","arr","isOnSubmit","el","returnButton","returnWrapper","scrollToTopButton","backToTopWrapper","loader","width","height","color","visible","questionsData","submitInterface","questionsReturn","questionsTablet","questionsWrapper","exact","strict","sensitive","from","to","Outcome","reqResp","isSuccess","reqFailed","activeClass","image","onFailure","outcome","src","outcomeImage","alt","delayMethod","effect","placeholderSrc","status","message","App","path","component","initialState","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","updatedAnswers","applyMiddleware","thunk","ReactDOM","render","forceRefresh","keyLength","getElementById","URL","origin","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.95549992.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const axiosInstance = axios.create({\n  baseURL: 'https://atis-f5916.firebaseio.com/',\n  headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n});\n","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\nimport { axiosInstance } from '../utilities/axios-utilities';\n\nconst reqCancelNotification =\n  '[CANCELLATION PROCESS] Operation canceled due to the API limits.';\n\nexport const addAnswerCreator = (qNum, oNum) => {\n  return {\n    type: actionTypes.ADD_ANSWER,\n    questionNumber: qNum,\n    optionNumber: oNum,\n  };\n};\n\nexport const initializeRequest = () => ({\n  type: actionTypes.INITIALIZE_REQUEST,\n});\n\nexport const postAnswerRequest = (respData) => ({\n  type: actionTypes.POST_ANSWER_REQUEST,\n  payload: respData,\n});\n\nexport const getTestRequest = (respData) => ({\n  type: actionTypes.GET_TEST_REQUEST,\n  payload: respData,\n});\n\nexport const getTopicsRequest = (respData) => ({\n  type: actionTypes.GET_TOPICS_REQUEST,\n  payload: respData,\n});\n\nexport const requestFailure = (error) => ({\n  type: actionTypes.REQUEST_FAILURE,\n  payload: error,\n});\n\nexport const clearStateCreator = () => ({\n  type: actionTypes.CLEAR_STATE,\n});\n\nexport const requestCreator = (type, ...config) => {\n  let source;\n\n  return async (dispatch) => {\n    dispatch(initializeRequest());\n\n    if (source) {\n      source.cancel(reqCancelNotification);\n    }\n    const { CancelToken } = axios;\n    source = CancelToken.source();\n\n    let reqResponse;\n\n    try {\n      if (type === 'POST_ANSWER') {\n        const [title, answerData] = config;\n\n        reqResponse = await axiosInstance.post(\n          `/gathered/${title}/answers.json`,\n          JSON.stringify(answerData),\n          { cancelToken: source.token }\n        );\n\n        dispatch(postAnswerRequest(reqResponse.data));\n      } else if (type === 'GET_TEST') {\n        const topic = config;\n\n        reqResponse = await axiosInstance.get(`/test/${topic}.json`, {\n          cancelToken: source.token,\n        });\n\n        dispatch(getTestRequest(reqResponse.data));\n      } else if (type === 'GET_TOPICS') {\n        reqResponse = await axiosInstance.get(`/topics.json`, {\n          cancelToken: source.token,\n        });\n\n        dispatch(getTopicsRequest(reqResponse.data));\n      }\n    } catch (reqError) {\n      dispatch(requestFailure(reqError));\n    }\n  };\n};\n","export const ADD_ANSWER = 'ADD_ANSWER';\nexport const INITIALIZE_REQUEST = 'INITIALIZE_REQUEST';\nexport const GET_TOPICS_REQUEST = 'GET_TOPICS_REQUEST';\nexport const GET_TEST_REQUEST = 'GET_TEST_REQUEST';\nexport const POST_ANSWER_REQUEST = 'POST_ANSWER_REQUEST';\nexport const REQUEST_FAILURE = 'REQUEST_FAILURE';\nexport const CLEAR_STATE = 'CLEAR_STATE';\n","import { useSelector, shallowEqual } from 'react-redux';\n\nexport const useShallowEqualSelector = (selector) => {\n  return useSelector(selector, shallowEqual);\n};\n","export const scrollToTop = () => {\n  window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n};\n\nexport const handleKeyDownCreator = (event, keyDownHandler) => {\n  if (event.key === 'Enter') {\n    keyDownHandler();\n  }\n};\n\nexport const activeClassElector = (elector, mainClass, secondClass) =>\n  elector ? mainClass : `${mainClass} ${secondClass}`;\n\nexport const parseError = (err) =>\n  JSON.parse(JSON.stringify(err, Object.getOwnPropertyNames(err)));\n\nexport const objectKeysLength = (obj) => Object.keys(obj).length;\n\nexport const getArrayTrueLength = (arr) =>\n  JSON.parse(JSON.stringify(arr)).filter((el) => el).length;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { handleKeyDownCreator } from '../../../utilities/utilities';\n\nimport classes from './ControlButton.module.scss';\n\nexport const ControlButton = ({ direction, outerClass, title, clickHandler }) => {\n  let innerClass;\n\n  switch (direction) {\n    case 'top':\n      innerClass = classes.arrowTop;\n      break;\n    case 'right':\n      innerClass = classes.arrowRight;\n      break;\n    case 'bottom':\n      innerClass = classes.arrowBottom;\n      break;\n    case 'left':\n      innerClass = classes.arrowLeft;\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className={outerClass}>\n      {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n      <span\n        role=\"button\"\n        tabIndex={0}\n        className={innerClass}\n        title={title}\n        onClick={clickHandler}\n        onKeyDown={\n          (event) => handleKeyDownCreator(event, clickHandler)\n          // eslint-disable-next-line react/jsx-curly-newline\n        }\n      />\n    </div>\n  );\n};\n\nControlButton.defaultProps = {\n  direction: 'top',\n  title: 'Control button',\n};\n\nControlButton.propTypes = {\n  direction: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n  outerClass: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  clickHandler: PropTypes.func.isRequired,\n};\n","import React, { useState, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { ControlButton } from '../ControlButton/ControlButton';\nimport { requestCreator } from '../../../store/actionCreators';\nimport { handleKeyDownCreator } from '../../../utilities/utilities';\n\nimport classes from './AutocompleteField.module.scss';\n\nexport const AutocompleteField = ({ label, options, isActive }) => {\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const [completion, setCompletion] = useState({\n    activeOption: 0,\n    filteredOptions: [],\n    showOptions: false,\n    userInput: '',\n  });\n\n  const { activeOption, filteredOptions, showOptions, userInput } = completion;\n\n  const [active, setActive] = useState(!isActive);\n\n  const changeHandler = (e) => {\n    const currentUserInput = e.currentTarget.value;\n\n    const forFilteredOptions = options.filter(\n      (option) => option.toLowerCase().indexOf(currentUserInput.toLowerCase()) > -1\n    );\n\n    setCompletion({\n      activeOption: 0,\n      filteredOptions: forFilteredOptions,\n      showOptions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n\n  const clickHandler = (e) => {\n    setCompletion({\n      activeOption: 0,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: e.currentTarget.innerText,\n    });\n  };\n\n  const getTestOnClickHandler = () => {\n    dispatch(requestCreator('GET_TEST', userInput));\n    history.push('/aTis/test');\n  };\n\n  const changeOptionHandler = (nextOption) => {\n    setCompletion((prevState) => ({ ...prevState, activeOption: nextOption }));\n  };\n\n  const keyDownHandler = (e) => {\n    if (e.keyCode === 13) {\n      setCompletion((prevState) => ({\n        ...prevState,\n        activeOption: 0,\n        showOptions: false,\n        userInput: filteredOptions[activeOption] || prevState.userInput,\n      }));\n    } else if (e.keyCode === 38) {\n      // eslint-disable-next-line no-unused-expressions\n      activeOption === 0\n        ? changeOptionHandler(filteredOptions.length - 1)\n        : changeOptionHandler(activeOption - 1);\n    } else if (e.keyCode === 40) {\n      // eslint-disable-next-line no-unused-expressions\n      activeOption === filteredOptions.length - 1\n        ? changeOptionHandler(0)\n        : changeOptionHandler(activeOption + 1);\n    }\n  };\n\n  let optionList;\n\n  if (userInput.length !== 0 && showOptions) {\n    if (filteredOptions.length !== 0) {\n      optionList = (\n        <ul className={classes.options}>\n          {filteredOptions.map((option, index) => (\n            <li\n              role=\"menuitem\"\n              className={index === activeOption ? classes.optionActive : ''}\n              key={option}\n              onClick={clickHandler}\n              onKeyDown={\n                (event) => handleKeyDownCreator(event, clickHandler)\n                // eslint-disable-next-line react/jsx-curly-newline\n              }\n            >\n              {option}\n            </li>\n          ))}\n        </ul>\n      );\n    } else {\n      optionList = (\n        <div className={classes.noShow}>Nothing to show. You are on your own!</div>\n      );\n    }\n  }\n\n  const continueButton = (\n    <ControlButton\n      direction=\"right\"\n      outerClass={classes.continueWrapper}\n      title=\"Continue to the test\"\n      clickHandler={getTestOnClickHandler}\n    />\n  );\n\n  const classNameInUse = useMemo(\n    () =>\n      `${classes.inputField} ${\n        ((!isActive ? active : active || userInput.length !== 0) && classes.active) || ''\n      } ${(!isActive && !active && classes.inactive) || ''}`,\n    [isActive, userInput, active]\n  );\n\n  return (\n    <>\n      <div className={classNameInUse}>\n        <input\n          id=\"autocomplete-field\"\n          type=\"text\"\n          name=\"Autocomplete input field\"\n          value={userInput}\n          placeholder={isActive ? label : ''}\n          onChange={changeHandler}\n          onKeyDown={keyDownHandler}\n          onFocus={() => isActive && setActive(true)}\n          onBlur={() => isActive && setActive(false)}\n          disabled={!isActive}\n          autoComplete=\"off\"\n        />\n        <label htmlFor=\"autocomplete-field\">{isActive && label}</label>\n        {isActive && userInput && options.includes(userInput) && continueButton}\n      </div>\n      {optionList}\n    </>\n  );\n};\n\nAutocompleteField.defaultProps = {\n  label: 'I am a default label! My owner is too lazy to change me.',\n  isActive: true,\n};\n\nAutocompleteField.propTypes = {\n  label: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isActive: PropTypes.bool,\n};\n","import React, { useEffect, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { requestCreator } from '../../store/actionCreators';\nimport { useShallowEqualSelector } from '../../store/hooks';\nimport { AutocompleteField } from '../UI/AutocompleteField/AutocompleteField';\n\nimport classes from './Main.module.scss';\n\nexport const Main = memo(() => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(requestCreator('GET_TOPICS'));\n  }, [dispatch]);\n\n  const opts = useShallowEqualSelector((state) => state.availableTopics);\n\n  const isLoading = useSelector((state) => state.isLoading);\n\n  return (\n    <main className={classes.main}>\n      <h1 className={classes.title}>\n        {isLoading ? 'Wait a second ...' : 'Just start typing ...'}\n      </h1>\n      <AutocompleteField\n        label=\"Anonymous Testing Intelligent Service\"\n        options={opts}\n        isActive={!isLoading}\n      />\n      <footer className={classes.footer}>\n        {`v${process.env.REACT_APP_VERSION}`}\n        <a\n          href={process.env.REACT_APP_AUTHOR_URL}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Change my mind\n        </a>\n      </footer>\n    </main>\n  );\n});\n","import React, { memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addAnswerCreator } from '../../../store/actionCreators';\nimport { handleKeyDownCreator, activeClassElector } from '../../../utilities/utilities';\n\nimport classes from './Option.module.scss';\n\nexport const Option = memo(({ qNum, oNum, option }) => {\n  const dispatch = useDispatch();\n\n  const answer = useSelector((state) => state.answers[qNum]);\n\n  const isLoading = useSelector((state) => state.isLoading);\n\n  const literalOpt = String.fromCharCode(65 + oNum);\n\n  const onAddAnswer = (qNumParam, oNumParam) =>\n    dispatch(addAnswerCreator(qNumParam, oNumParam));\n\n  const activeClasses = activeClassElector(\n    answer !== literalOpt,\n    classes.option,\n    classes.active\n  );\n\n  return (\n    <li\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role\n      role=\"button\"\n      className={activeClasses}\n      onClick={() => {\n        // eslint-disable-next-line no-unused-expressions\n        !isLoading && onAddAnswer(qNum, literalOpt);\n      }}\n      onKeyDown={\n        (event) => handleKeyDownCreator(event, onAddAnswer(qNum, literalOpt))\n        // eslint-disable-next-line react/jsx-curly-newline\n      }\n    >\n      {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n      {literalOpt} {option}\n    </li>\n  );\n});\n\nOption.propTypes = {\n  qNum: PropTypes.number.isRequired,\n  oNum: PropTypes.number.isRequired,\n  option: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Option } from './Option/Option';\n\nimport classes from './Options.module.scss';\n\nexport const Options = memo(({ qNum, options }) => {\n  const optionsData = options.map((option, index) => (\n    <Option key={option} qNum={qNum} oNum={index} option={option} />\n  ));\n\n  return <ol className={classes.options}>{optionsData}</ol>;\n});\n\nOptions.propTypes = {\n  qNum: PropTypes.number.isRequired,\n  options: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n    .isRequired,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Options } from '../Options/Options';\nimport { activeClassElector } from '../../utilities/utilities';\n\nimport classes from './Question.module.scss';\n\nexport const Question = memo(({ qNum, question, options, answers }) => (\n  <li className={classes.question}>\n    <span\n      className={activeClassElector(!answers[qNum], classes.indicator, classes.inactive)}\n    />\n    <p className={classes.questionText}>\n      {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n      {qNum + 1}. {question}\n    </p>\n    <p className={classes.answerTitle}>Answer</p>\n    <Options qNum={qNum} options={options} />\n  </li>\n));\n\nQuestion.propTypes = {\n  qNum: PropTypes.number.isRequired,\n  question: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  options: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n    .isRequired,\n  answers: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './Button.module.scss';\n\nexport const Button = ({ bName, bValue, isDisabled, clickHandler, children }) => (\n  <button\n    className={classes.button}\n    type=\"button\"\n    name={bName}\n    value={bValue}\n    disabled={isDisabled}\n    onClick={clickHandler}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nButton.propTypes = {\n  bName: PropTypes.string.isRequired,\n  bValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  isDisabled: PropTypes.bool,\n  clickHandler: PropTypes.func.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect, useCallback, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\n\nimport { useShallowEqualSelector } from '../../store/hooks';\nimport { Question } from '../Question/Question';\nimport { Button } from '../UI/Button/Button';\nimport { ControlButton } from '../UI/ControlButton/ControlButton';\nimport { clearStateCreator, requestCreator } from '../../store/actionCreators';\nimport {\n  scrollToTop,\n  objectKeysLength,\n  getArrayTrueLength,\n} from '../../utilities/utilities';\n\nimport classes from './QuestionsTablet.module.scss';\n\nconst selectRequestResponseState = createSelector(\n  (state) => state.reqResponse,\n  (reqResponse) => objectKeysLength(reqResponse)\n);\n\n// eslint-disable-next-line react/prop-types\nexport const QuestionsTablet = memo(({ history }) => {\n  const dispatch = useDispatch();\n\n  const testData = useShallowEqualSelector((state) => state.test);\n\n  const { topic, author, questions, options } = testData;\n\n  const answ = useShallowEqualSelector((state) => state.answers);\n\n  const isLoading = useSelector((state) => state.isLoading);\n\n  const reqRespLength = useSelector(selectRequestResponseState);\n\n  const [isScrollVisible, setIsScrollVisible] = useState(false);\n\n  const returnOnClickHandler = () => {\n    dispatch(clearStateCreator());\n    // eslint-disable-next-line react/prop-types\n    history.push('/aTis');\n  };\n\n  const submitAnswersClickHandler = useCallback(\n    () => dispatch(requestCreator('POST_ANSWER', topic, answ)),\n    [topic, answ, dispatch]\n  );\n\n  const toggleScrollVisibility = () => {\n    // eslint-disable-next-line no-unused-expressions\n    window.pageYOffset > 325 ? setIsScrollVisible(true) : setIsScrollVisible(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('scroll', toggleScrollVisibility);\n    return () => {\n      window.removeEventListener('scroll', toggleScrollVisibility);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (reqRespLength > 1) {\n      // eslint-disable-next-line react/prop-types\n      history.push('/aTis/outcome');\n    }\n  }, [reqRespLength, history]);\n\n  const isOnSubmit =\n    questions && questions.length !== 0 && getArrayTrueLength(answ) === questions.length;\n\n  const returnButton = (\n    <ControlButton\n      direction=\"left\"\n      outerClass={classes.returnWrapper}\n      title=\"Return to the initial window\"\n      clickHandler={returnOnClickHandler}\n    />\n  );\n\n  const scrollToTopButton = (\n    <ControlButton\n      direction=\"top\"\n      outerClass={classes.backToTopWrapper}\n      title=\"Back to top\"\n      clickHandler={scrollToTop}\n    />\n  );\n\n  const loader = (\n    <Loader type=\"Bars\" width={60} height={60} color=\"#f7f7f7\" visible={isLoading} />\n  );\n\n  const questionsData =\n    questions &&\n    questions.length !== 0 &&\n    questions.map((question, index) => (\n      <Question\n        key={`${question}`}\n        qNum={index}\n        question={question}\n        options={options && options[index]}\n        answers={answ}\n      />\n    ));\n\n  const submitInterface = (\n    <>\n      <Button\n        bName=\"Answers submit button\"\n        bValue=\"Submit answers\"\n        isDisabled={!isOnSubmit}\n        clickHandler={submitAnswersClickHandler}\n      >\n        {isOnSubmit ? 'Submit answers' : 'Please answer all the questions to proceed'}\n      </Button>\n      <button\n        className={classes.questionsReturn}\n        type=\"button\"\n        name=\"Return button\"\n        value=\"OR return to the initial window\"\n        onClick={returnOnClickHandler}\n      >\n        OR return to the initial window\n      </button>\n    </>\n  );\n\n  const questionsTablet = (\n    <section className={classes.questionsWrapper}>\n      <h1 className={classes.title}>{topic}</h1>\n      <h3 className={classes.author}>{author && `by ${author}`}</h3>\n      {!isLoading && returnButton}\n      <ul className={classes.questions}>{questionsData}</ul>\n      {isLoading ? loader : submitInterface}\n      {isScrollVisible && scrollToTopButton}\n    </section>\n  );\n\n  return isLoading || objectKeysLength(testData) > 1 ? (\n    questionsTablet\n  ) : (\n    <Redirect exact strict sensitive from=\"/aTis/test\" to=\"/aTis\" />\n  );\n});\n","import React, { memo } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nimport { useShallowEqualSelector } from '../../store/hooks';\nimport { Button } from '../UI/Button/Button';\nimport { activeClassElector, objectKeysLength } from '../../utilities/utilities';\n\nimport classes from './Outcome.module.scss';\nimport outcomeImage from '../../assets/images/outcomeImage.png';\n\n// eslint-disable-next-line react/prop-types\nexport const Outcome = memo(({ history }) => {\n  const reqResp = useShallowEqualSelector((state) => state.reqResponse);\n\n  const isSuccess = !reqResp.reqFailed;\n\n  const activeClass = activeClassElector(isSuccess, classes.image, classes.onFailure);\n\n  const outcome = (\n    <div className={classes.outcome}>\n      <LazyLoadImage\n        className={activeClass}\n        src={outcomeImage}\n        alt={isSuccess ? 'Successfully completed' : 'Something went wrong'}\n        delayMethod=\"debounce\"\n        effect=\"blur\"\n        placeholderSrc={outcomeImage}\n      />\n      <h1 className={classes.status}>{isSuccess ? 'Success!' : 'What the ...?'}</h1>\n      <h5 className={classes.topic}>\n        {isSuccess\n          ? 'Your results were successfully submitted for review!'\n          : 'Looks like something went wrong!'}\n      </h5>\n      <h5 className={classes.message}>\n        {isSuccess\n          ? `Don't know what to do next? Go back and explore some other stuff.`\n          : 'We had some issues submitting your answers. Please try again later.'}\n      </h5>\n      <Button\n        bName=\"Return button\"\n        bValue=\"Return to the initial window\"\n        // eslint-disable-next-line react/prop-types\n        clickHandler={() => history.push('/aTis')}\n      >\n        Take me back\n      </Button>\n    </div>\n  );\n\n  return objectKeysLength(reqResp) > 1 ? (\n    outcome\n  ) : (\n    <Redirect exact strict sensitive from=\"/aTis/outcome\" to=\"/aTis\" />\n  );\n});\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Main } from './components/Main/Main';\nimport { QuestionsTablet } from './components/QuestionsTablet/QuestionsTablet';\nimport { Outcome } from './components/Outcome/Outcome';\n\nexport const App = () => (\n  <Switch>\n    <Route exact sensitive path=\"/aTis/outcome\" component={Outcome} />\n    <Route exact sensitive path=\"/aTis/test\" component={QuestionsTablet} />\n    <Route path=\"*\" component={Main} />\n  </Switch>\n);\n","export const initialState = {\n  availableTopics: [],\n  test: {},\n  answers: [],\n  isLoading: false,\n  reqResponse: {},\n};\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n\n        if (installingWorker == null) {\n          return;\n        }\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { App } from './App';\nimport { reducer } from './store/reducer';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Router forceRefresh={false} keyLength={12}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('react-root')\n);\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nserviceWorker.register();\n","import { initialState } from './initialState';\nimport * as actionTypes from './actionTypes';\nimport { parseError } from '../utilities/utilities';\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_ANSWER: {\n      const updatedAnswers = [...state.answers];\n      updatedAnswers[action.questionNumber] = action.optionNumber;\n      return { ...state, answers: updatedAnswers };\n    }\n\n    case actionTypes.INITIALIZE_REQUEST:\n      return { ...state, isLoading: true };\n\n    case actionTypes.GET_TOPICS_REQUEST:\n      return {\n        ...state,\n        availableTopics: action.payload,\n        isLoading: false,\n        reqResponse: { reqFailed: false },\n      };\n\n    case actionTypes.GET_TEST_REQUEST:\n      return {\n        ...state,\n        test: action.payload,\n        isLoading: false,\n        reqResponse: { reqFailed: false },\n      };\n\n    case actionTypes.POST_ANSWER_REQUEST:\n      return {\n        ...state,\n        test: {},\n        answers: [],\n        isLoading: false,\n        reqResponse: { ...action.payload, reqFailed: false },\n      };\n\n    case actionTypes.REQUEST_FAILURE:\n      return {\n        ...state,\n        test: {},\n        answers: [],\n        isLoading: false,\n        reqResponse: {\n          ...parseError(action.payload),\n          reqFailed: true,\n        },\n      };\n\n    case actionTypes.CLEAR_STATE:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"AutocompleteField_inputField__UV0rQ\",\"active\":\"AutocompleteField_active__2JxcN\",\"inactive\":\"AutocompleteField_inactive__1kscu\",\"continueWrapper\":\"AutocompleteField_continueWrapper__bQGhU\",\"options\":\"AutocompleteField_options__X7dk7\",\"optionActive\":\"AutocompleteField_optionActive__wZMI9\",\"noShow\":\"AutocompleteField_noShow__30k3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionsWrapper\":\"QuestionsTablet_questionsWrapper__1fS4C\",\"questions\":\"QuestionsTablet_questions__2WxQD\",\"title\":\"QuestionsTablet_title__2RZ9E\",\"author\":\"QuestionsTablet_author__16q5q\",\"questionsReturn\":\"QuestionsTablet_questionsReturn__SDy6u\",\"backToTopWrapper\":\"QuestionsTablet_backToTopWrapper__1sKZh\",\"returnWrapper\":\"QuestionsTablet_returnWrapper__2xOIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outcome\":\"Outcome_outcome__XAoEu\",\"image\":\"Outcome_image__1Ipwo\",\"onFailure\":\"Outcome_onFailure__BsfsD\",\"status\":\"Outcome_status__3PnwX\",\"topic\":\"Outcome_topic__1b8v8\",\"message\":\"Outcome_message__M0G3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"Question_question__1Joyc\",\"indicator\":\"Question_indicator__1JFCy\",\"inactive\":\"Question_inactive__3p87E\",\"questionText\":\"Question_questionText__1QfqT\",\"answerTitle\":\"Question_answerTitle__1tHsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrowTop\":\"ControlButton_arrowTop__1Z2BW\",\"arrowRight\":\"ControlButton_arrowRight__1rR7i\",\"arrowBottom\":\"ControlButton_arrowBottom__2gaaY\",\"arrowLeft\":\"ControlButton_arrowLeft__qFRij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3JhNz\",\"title\":\"Main_title__2sJBY\",\"footer\":\"Main_footer__3AekE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"Option_option__3JaSi\",\"active\":\"Option_active__13yNC\"};","module.exports = __webpack_public_path__ + \"static/media/outcomeImage.e6e4d7b7.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__19g0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__32FwK\"};"],"sourceRoot":""}