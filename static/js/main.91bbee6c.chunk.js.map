{"version":3,"sources":["utilities/axios-utilities.js","store/actionCreators.js","store/actionTypes.js","utilities/utilities.js","components/UI/ControlButton/ControlButton.js","components/UI/Autocomplete/Autocomplete.js","components/Main/Main.js","components/Options/Option/Option.js","components/Options/Options.js","components/Question/Question.js","components/UI/Button/Button.js","components/QuestionsTablet/QuestionsTablet.js","components/Outcome/Outcome.js","App.js","store/initialState.js","serviceWorker.js","index.js","store/reducer.js","components/UI/Autocomplete/Autocomplete.module.scss","components/QuestionsTablet/QuestionsTablet.module.scss","components/Outcome/Outcome.module.scss","components/Question/Question.module.scss","components/UI/ControlButton/ControlButton.module.scss","components/Main/Main.module.scss","components/Options/Option/Option.module.scss","assets/images/outcomeImage.png","components/Options/Options.module.scss","components/UI/Button/Button.module.scss"],"names":["axiosInstance","axios","create","baseURL","headers","Accept","reqCancelNotification","postAnswerRequest","respData","type","payload","getTestRequest","getTopicsRequest","requestFailure","error","requestCreator","config","source","dispatch","a","cancel","CancelToken","title","answerData","post","JSON","stringify","cancelToken","token","reqResponse","data","topic","get","scrollToTop","window","scrollTo","top","left","behavior","handleKeyDownCreator","event","keyDownHandler","key","activeClassElector","elector","mainClass","secondClass","parseError","err","parse","Object","getOwnPropertyNames","objectKeysLength","obj","keys","length","ControlButton","innerClass","direction","outerClass","clickHandler","classes","arrowTop","arrowRight","arrowBottom","arrowLeft","className","role","tabIndex","onClick","onKeyDown","defaultProps","Autocomplete","connect","onGetTestCreator","optionList","label","options","isActive","useState","activeOption","filteredOptions","showOptions","userInput","completion","setCompletion","active","setActive","history","useHistory","e","currentTarget","innerText","changeOptionHandler","nextOption","prevState","map","option","index","optionActive","undefined","noShow","continueButton","continueWrapper","push","classNameInUse","useMemo","inputField","inactive","id","name","value","placeholder","onChange","currentUserInput","forFilteredOptions","filter","toLowerCase","indexOf","keyCode","onFocus","onBlur","disabled","autoComplete","htmlFor","includes","Main","memo","state","opts","availableTopics","isLoading","onGetTopicsCreator","useEffect","main","footer","process","href","rel","target","Option","answersState","answers","onAddAnswer","qNum","oNum","questionNumber","optionNumber","addAnswerCreator","literalOpt","String","fromCharCode","activeClasses","Options","optionsData","Question","question","indicator","questionText","answerTitle","propTypes","PropTypes","number","isRequired","oneOfType","string","arrayOf","Button","bName","bValue","isDisabled","children","button","QuestionsTablet","testData","test","answ","reqResp","onPostAnswerCreator","onClearStateCreator","isScrollVisible","setIsScrollVisible","author","questions","returnOnClickHandler","toggleScrollVisibility","pageYOffset","document","addEventListener","removeEventListener","isOnSubmit","el","returnButton","returnWrapper","scrollToTopButton","backToTopWrapper","loader","width","height","color","visible","questionsData","submitInterface","questionsReturn","questionsTablet","questionsWrapper","exact","strict","sensitive","from","to","Outcome","isSuccess","reqFailed","activeClass","image","onFailure","outcome","src","outcomeImage","alt","delayMethod","effect","placeholderSrc","status","message","App","path","component","initialState","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","updatedAnswers","applyMiddleware","thunk","ReactDOM","render","forceRefresh","keyLength","getElementById","URL","origin","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.91bbee6c.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const axiosInstance = axios.create({\n  baseURL: 'https://atis-f5916.firebaseio.com/',\n  headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n});\n","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\nimport { axiosInstance } from '../utilities/axios-utilities';\n\nconst reqCancelNotification =\n  '[CANCELLATION PROCESS] Operation canceled due to the API limits.';\n\nexport const addAnswerCreator = (qNum, oNum) => {\n  return {\n    type: actionTypes.ADD_ANSWER,\n    questionNumber: qNum,\n    optionNumber: oNum,\n  };\n};\n\nexport const initializeRequest = () => ({\n  type: actionTypes.INITIALIZE_REQUEST,\n});\n\nexport const postAnswerRequest = (respData) => ({\n  type: actionTypes.POST_ANSWER_REQUEST,\n  payload: respData,\n});\n\nexport const getTestRequest = (respData) => ({\n  type: actionTypes.GET_TEST_REQUEST,\n  payload: respData,\n});\n\nexport const getTopicsRequest = (respData) => ({\n  type: actionTypes.GET_TOPICS_REQUEST,\n  payload: respData,\n});\n\nexport const requestFailure = (error) => ({\n  type: actionTypes.REQUEST_FAILURE,\n  payload: error,\n});\n\nexport const clearStateCreator = () => ({\n  type: actionTypes.CLEAR_STATE,\n});\n\nexport const requestCreator = (type, ...config) => {\n  let source;\n\n  return async (dispatch) => {\n    dispatch(initializeRequest());\n\n    if (source) {\n      source.cancel(reqCancelNotification);\n    }\n    const { CancelToken } = axios;\n    source = CancelToken.source();\n\n    let reqResponse;\n\n    try {\n      if (type === 'POST_ANSWER') {\n        const [title, answerData] = config;\n\n        reqResponse = await axiosInstance.post(\n          `/gathered/${title}/answers.json`,\n          JSON.stringify(answerData),\n          { cancelToken: source.token }\n        );\n\n        dispatch(postAnswerRequest(reqResponse.data));\n      } else if (type === 'GET_TEST') {\n        const topic = config;\n\n        reqResponse = await axiosInstance.get(`/test/${topic}.json`, {\n          cancelToken: source.token,\n        });\n\n        dispatch(getTestRequest(reqResponse.data));\n      } else if (type === 'GET_TOPICS') {\n        reqResponse = await axiosInstance.get(`/topics.json`, {\n          cancelToken: source.token,\n        });\n\n        dispatch(getTopicsRequest(reqResponse.data));\n      }\n    } catch (reqError) {\n      dispatch(requestFailure(reqError));\n    }\n  };\n};\n","export const ADD_ANSWER = 'ADD_ANSWER';\nexport const INITIALIZE_REQUEST = 'INITIALIZE_REQUEST';\nexport const GET_TOPICS_REQUEST = 'GET_TOPICS_REQUEST';\nexport const GET_TEST_REQUEST = 'GET_TEST_REQUEST';\nexport const POST_ANSWER_REQUEST = 'POST_ANSWER_REQUEST';\nexport const REQUEST_FAILURE = 'REQUEST_FAILURE';\nexport const CLEAR_STATE = 'CLEAR_STATE';\n","export const scrollToTop = () => {\n  window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n};\n\nexport const handleKeyDownCreator = (event, keyDownHandler) => {\n  if (event.key === 'Enter') {\n    keyDownHandler();\n  }\n};\n\nexport const activeClassElector = (elector, mainClass, secondClass) =>\n  elector ? mainClass : `${mainClass} ${secondClass}`;\n\nexport const parseError = (err) =>\n  JSON.parse(JSON.stringify(err, Object.getOwnPropertyNames(err)));\n\nexport const objectKeysLength = (obj) => Object.keys(obj).length;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { handleKeyDownCreator } from '../../../utilities/utilities';\n\nimport classes from './ControlButton.module.scss';\n\nexport const ControlButton = ({ direction, outerClass, title, clickHandler }) => {\n  let innerClass;\n\n  switch (direction) {\n    case 'top':\n      innerClass = classes.arrowTop;\n      break;\n    case 'right':\n      innerClass = classes.arrowRight;\n      break;\n    case 'bottom':\n      innerClass = classes.arrowBottom;\n      break;\n    case 'left':\n      innerClass = classes.arrowLeft;\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className={outerClass}>\n      {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n      <span\n        role=\"button\"\n        tabIndex={0}\n        className={innerClass}\n        title={title}\n        onClick={clickHandler}\n        onKeyDown={\n          (event) => handleKeyDownCreator(event, clickHandler)\n          // eslint-disable-next-line react/jsx-curly-newline\n        }\n      />\n    </div>\n  );\n};\n\nControlButton.defaultProps = {\n  direction: 'top',\n  title: 'Control button',\n};\n\nControlButton.propTypes = {\n  direction: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n  outerClass: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  clickHandler: PropTypes.func.isRequired,\n};\n","import React, { useState, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { ControlButton } from '../ControlButton/ControlButton';\nimport { requestCreator } from '../../../store/actionCreators';\nimport { handleKeyDownCreator } from '../../../utilities/utilities';\n\nimport classes from './Autocomplete.module.scss';\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetTestCreator: (topic) => dispatch(requestCreator('GET_TEST', topic)),\n  };\n};\n\nexport const Autocomplete = connect(\n  null,\n  mapDispatchToProps\n)(({ label, options, isActive, onGetTestCreator }) => {\n  const [completion, setCompletion] = useState({\n    activeOption: 0,\n    filteredOptions: [],\n    showOptions: false,\n    userInput: '',\n  });\n\n  const { activeOption, filteredOptions, showOptions, userInput } = completion;\n\n  const [active, setActive] = useState(!isActive);\n\n  const history = useHistory();\n\n  const changeHandler = (e) => {\n    const currentUserInput = e.currentTarget.value;\n\n    const forFilteredOptions = options.filter(\n      (option) => option.toLowerCase().indexOf(currentUserInput.toLowerCase()) > -1\n    );\n\n    setCompletion({\n      activeOption: 0,\n      filteredOptions: forFilteredOptions,\n      showOptions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n\n  const clickHandler = (e) => {\n    setCompletion({\n      activeOption: 0,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: e.currentTarget.innerText,\n    });\n  };\n\n  const getTestOnClickHandler = () => {\n    onGetTestCreator(completion.userInput);\n    history.push('/aTis/test');\n  };\n\n  const changeOptionHandler = (nextOption) => {\n    setCompletion((prevState) => ({ ...prevState, activeOption: nextOption }));\n  };\n\n  const keyDownHandler = (e) => {\n    if (e.keyCode === 13) {\n      setCompletion((prevState) => ({\n        ...prevState,\n        activeOption: 0,\n        showOptions: false,\n        userInput: filteredOptions[activeOption] || prevState.userInput,\n      }));\n    } else if (e.keyCode === 38) {\n      // eslint-disable-next-line no-unused-expressions\n      activeOption === 0\n        ? changeOptionHandler(filteredOptions.length - 1)\n        : changeOptionHandler(activeOption - 1);\n    } else if (e.keyCode === 40) {\n      // eslint-disable-next-line no-unused-expressions\n      activeOption === filteredOptions.length - 1\n        ? changeOptionHandler(0)\n        : changeOptionHandler(activeOption + 1);\n    }\n  };\n\n  let optionList;\n\n  if (userInput && showOptions) {\n    if (filteredOptions.length !== 0) {\n      optionList = (\n        <ul className={classes.options}>\n          {filteredOptions.map((option, index) => (\n            <li\n              role=\"menuitem\"\n              className={index === activeOption ? classes.optionActive : undefined}\n              key={option}\n              onClick={clickHandler}\n              onKeyDown={\n                (event) => handleKeyDownCreator(event, clickHandler)\n                // eslint-disable-next-line react/jsx-curly-newline\n              }\n            >\n              {option}\n            </li>\n          ))}\n        </ul>\n      );\n    } else {\n      optionList = (\n        <div className={classes.noShow}>Nothing to show. You are on your own!</div>\n      );\n    }\n  }\n\n  const continueButton = (\n    <ControlButton\n      direction=\"right\"\n      outerClass={classes.continueWrapper}\n      title=\"Continue to the test\"\n      clickHandler={getTestOnClickHandler}\n    />\n  );\n\n  const classNameInUse = useMemo(\n    () =>\n      `${classes.inputField} ${\n        (!isActive ? active : active || userInput) && classes.active\n      } ${!isActive && !active && classes.inactive}`,\n    [isActive, userInput, active]\n  );\n\n  return (\n    <>\n      <div className={classNameInUse}>\n        <input\n          id=\"autocomplete\"\n          type=\"text\"\n          name=\"Autocomplete input field\"\n          value={userInput}\n          placeholder={isActive ? label : null}\n          onChange={changeHandler}\n          onKeyDown={keyDownHandler}\n          onFocus={() => isActive && setActive(true)}\n          onBlur={() => isActive && setActive(false)}\n          disabled={!isActive}\n          autoComplete=\"off\"\n        />\n        <label htmlFor=\"autocomplete\">{isActive && label}</label>\n        {isActive && userInput && options.includes(userInput) && continueButton}\n      </div>\n      {optionList}\n    </>\n  );\n});\n\nAutocomplete.defaultProps = {\n  label: 'I am a default label! My owner is too lazy to change me.',\n  isActive: true,\n};\n\nAutocomplete.propTypes = {\n  label: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isActive: PropTypes.bool,\n};\n","import React, { useEffect, memo } from 'react';\nimport { connect } from 'react-redux';\n\nimport { requestCreator } from '../../store/actionCreators';\nimport { Autocomplete } from '../UI/Autocomplete/Autocomplete';\n\nimport classes from './Main.module.scss';\n\nconst mapStateToProps = (state) => {\n  return {\n    opts: state.availableTopics,\n    isLoading: state.isLoading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetTopicsCreator: () => dispatch(requestCreator('GET_TOPICS')),\n  };\n};\n\nexport const Main = memo(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(({ opts, isLoading, onGetTopicsCreator }) => {\n    useEffect(() => {\n      onGetTopicsCreator();\n    }, [onGetTopicsCreator]);\n\n    return (\n      <main className={classes.main}>\n        <h1 className={classes.title}>\n          {isLoading ? 'Wait a second ...' : 'Just start typing ...'}\n        </h1>\n        <Autocomplete\n          label=\"Anonymous Testing Intelligent Service\"\n          options={opts}\n          isActive={!isLoading}\n        />\n        <footer className={classes.footer}>\n          {`v${process.env.REACT_APP_VERSION}`}\n          <a\n            href={process.env.REACT_APP_AUTHOR_URL}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Change my mind\n          </a>\n        </footer>\n      </main>\n    );\n  })\n);\n","import React, { memo } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addAnswerCreator } from '../../../store/actionCreators';\nimport { handleKeyDownCreator, activeClassElector } from '../../../utilities/utilities';\n\nimport classes from './Option.module.scss';\n\nconst mapStateToProps = (state) => {\n  return {\n    answersState: state.answers,\n    isLoading: state.isLoading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddAnswer: (qNum, oNum) => dispatch(addAnswerCreator(qNum, oNum)),\n  };\n};\n\nexport const Option = memo(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(({ qNum, oNum, option, answersState, isLoading, onAddAnswer }) => {\n    const literalOpt = String.fromCharCode(65 + oNum);\n\n    const activeClasses = activeClassElector(\n      answersState[qNum] !== literalOpt,\n      classes.option,\n      classes.active\n    );\n\n    return (\n      <li\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role\n        role=\"button\"\n        className={activeClasses}\n        onClick={() => {\n          // eslint-disable-next-line no-unused-expressions\n          !isLoading && onAddAnswer(qNum, literalOpt);\n        }}\n        onKeyDown={\n          (event) => handleKeyDownCreator(event, onAddAnswer(qNum, literalOpt))\n          // eslint-disable-next-line react/jsx-curly-newline\n        }\n      >\n        {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n        {literalOpt} {option}\n      </li>\n    );\n  })\n);\n\nOption.propTypes = {\n  qNum: PropTypes.number.isRequired,\n  oNum: PropTypes.number.isRequired,\n  option: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Option } from './Option/Option';\n\nimport classes from './Options.module.scss';\n\nexport const Options = memo(({ qNum, options }) => {\n  const optionsData = options.map((option, index) => (\n    <Option key={option} qNum={qNum} oNum={index} option={option} />\n  ));\n\n  return <ol className={classes.options}>{optionsData}</ol>;\n});\n\nOptions.propTypes = {\n  qNum: PropTypes.number.isRequired,\n  options: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n    .isRequired,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Options } from '../Options/Options';\nimport { activeClassElector } from '../../utilities/utilities';\n\nimport classes from './Question.module.scss';\n\nexport const Question = memo(({ qNum, question, options, answers }) => (\n  <li className={classes.question}>\n    <span\n      className={activeClassElector(!answers[qNum], classes.indicator, classes.inactive)}\n    />\n    <p className={classes.questionText}>\n      {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n      {qNum + 1}. {question}\n    </p>\n    <p className={classes.answerTitle}>Answer</p>\n    <Options qNum={qNum} options={options} />\n  </li>\n));\n\nQuestion.propTypes = {\n  qNum: PropTypes.number.isRequired,\n  question: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  options: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n    .isRequired,\n  answers: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './Button.module.scss';\n\nexport const Button = ({ bName, bValue, isDisabled, clickHandler, children }) => (\n  <button\n    className={classes.button}\n    type=\"button\"\n    name={bName}\n    value={bValue}\n    disabled={isDisabled}\n    onClick={clickHandler}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  isDisabled: false,\n};\n\nButton.propTypes = {\n  bName: PropTypes.string.isRequired,\n  bValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  isDisabled: PropTypes.bool,\n  clickHandler: PropTypes.func.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\n\nimport { Question } from '../Question/Question';\nimport { Button } from '../UI/Button/Button';\nimport { ControlButton } from '../UI/ControlButton/ControlButton';\nimport { clearStateCreator, requestCreator } from '../../store/actionCreators';\nimport { scrollToTop, objectKeysLength } from '../../utilities/utilities';\n\nimport classes from './QuestionsTablet.module.scss';\n\nconst mapStateToProps = (state) => {\n  return {\n    testData: state.test,\n    answ: state.answers,\n    isLoading: state.isLoading,\n    reqResp: state.reqResponse,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onPostAnswerCreator: (title, answ) =>\n      dispatch(requestCreator('POST_ANSWER', title, answ)),\n    onClearStateCreator: () => dispatch(clearStateCreator()),\n  };\n};\n\nexport const QuestionsTablet = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  ({\n    testData,\n    answ,\n    isLoading,\n    reqResp,\n    onPostAnswerCreator,\n    onClearStateCreator,\n    history,\n  }) => {\n    const [isScrollVisible, setIsScrollVisible] = useState(false);\n\n    const { topic, author, questions, options } = testData;\n\n    const returnOnClickHandler = () => {\n      onClearStateCreator();\n      history.push('/aTis');\n    };\n\n    const toggleScrollVisibility = () => {\n      // eslint-disable-next-line no-unused-expressions\n      window.pageYOffset > 325 ? setIsScrollVisible(true) : setIsScrollVisible(false);\n    };\n\n    useEffect(() => {\n      document.addEventListener('scroll', toggleScrollVisibility);\n      return () => {\n        window.removeEventListener('scroll', toggleScrollVisibility);\n      };\n    }, []);\n\n    useEffect(() => {\n      if (objectKeysLength(reqResp) > 1) {\n        history.push('/aTis/outcome');\n      }\n    }, [reqResp, history]);\n\n    const isOnSubmit = useMemo(\n      () =>\n        questions &&\n        questions.length !== 0 &&\n        JSON.parse(JSON.stringify(answ)).filter((el) => el).length === questions.length,\n      [questions, answ]\n    );\n\n    const returnButton = (\n      <ControlButton\n        direction=\"left\"\n        outerClass={classes.returnWrapper}\n        title=\"Return to the initial window\"\n        clickHandler={returnOnClickHandler}\n      />\n    );\n\n    const scrollToTopButton = (\n      <ControlButton\n        direction=\"top\"\n        outerClass={classes.backToTopWrapper}\n        title=\"Back to top\"\n        clickHandler={scrollToTop}\n      />\n    );\n\n    const loader = (\n      <Loader type=\"Bars\" width={60} height={60} color=\"#f7f7f7\" visible={isLoading} />\n    );\n\n    const questionsData =\n      questions &&\n      questions.length !== 0 &&\n      questions.map((question, index) => (\n        <Question\n          key={`${question}`}\n          qNum={index}\n          question={question}\n          options={options && options[index]}\n          answers={answ}\n        />\n      ));\n\n    const submitInterface = (\n      <>\n        <Button\n          bName=\"Answers submit button\"\n          bValue=\"Submit answers\"\n          isDisabled={!isOnSubmit || isLoading}\n          clickHandler={() => onPostAnswerCreator(topic, answ)}\n        >\n          {isOnSubmit ? 'Submit answers' : 'Please answer all the questions to proceed'}\n        </Button>\n        <button\n          className={classes.questionsReturn}\n          type=\"button\"\n          name=\"Return button\"\n          value=\"OR return to the initial window\"\n          onClick={returnOnClickHandler}\n        >\n          OR return to the initial window\n        </button>\n      </>\n    );\n\n    const questionsTablet = (\n      <section className={classes.questionsWrapper}>\n        <h1 className={classes.title}>{topic}</h1>\n        <h3 className={classes.author}>{author && `by ${author}`}</h3>\n        {!isLoading && returnButton}\n        <ul className={classes.questions}>{questionsData}</ul>\n        {isLoading ? loader : submitInterface}\n        {isScrollVisible && scrollToTopButton}\n      </section>\n    );\n\n    return isLoading || objectKeysLength(testData) > 1 ? (\n      questionsTablet\n    ) : (\n      <Redirect exact strict sensitive from=\"/aTis/test\" to=\"/aTis\" />\n    );\n  }\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nimport { Button } from '../UI/Button/Button';\nimport { activeClassElector } from '../../utilities/utilities';\n\nimport classes from './Outcome.module.scss';\nimport outcomeImage from '../../assets/images/outcomeImage.png';\n\nconst mapStateToProps = (state) => {\n  return {\n    reqResp: state.reqResponse,\n  };\n};\n\nexport const Outcome = connect(mapStateToProps)(({ reqResp }) => {\n  const history = useHistory();\n\n  const isSuccess = reqResp && !reqResp.reqFailed;\n\n  const activeClass = activeClassElector(isSuccess, classes.image, classes.onFailure);\n\n  return (\n    <div className={classes.outcome}>\n      <LazyLoadImage\n        className={activeClass}\n        src={outcomeImage}\n        alt={isSuccess ? 'Successfully completed' : 'Something went wrong'}\n        delayMethod=\"debounce\"\n        effect=\"blur\"\n        placeholderSrc={outcomeImage}\n      />\n      <h1 className={classes.status}>{isSuccess ? 'Success!' : 'What the ...?'}</h1>\n      <h5 className={classes.topic}>\n        {isSuccess\n          ? 'Your results were successfully submitted for review!'\n          : 'Looks like something went wrong!'}\n      </h5>\n      <h5 className={classes.message}>\n        {isSuccess\n          ? `Don't know what to do next? Go back and explore some other stuff.`\n          : 'We had some issues submitting your answers. Please try again later.'}\n      </h5>\n      <Button\n        bName=\"Return button\"\n        bValue=\"Return to the initial window\"\n        clickHandler={() => history.push('/aTis')}\n      >\n        Take me back\n      </Button>\n    </div>\n  );\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Main } from './components/Main/Main';\nimport { QuestionsTablet } from './components/QuestionsTablet/QuestionsTablet';\nimport { Outcome } from './components/Outcome/Outcome';\nimport { objectKeysLength } from './utilities/utilities';\n\nconst mapStateToProps = (state) => ({\n  reqResp: state.reqResponse,\n});\n\nexport const App = connect(mapStateToProps)(({ reqResp }) => (\n  <Switch>\n    <Route exact sensitive path=\"/aTis/outcome\">\n      {objectKeysLength(reqResp) > 1 ? (\n        <Outcome />\n      ) : (\n        <Redirect exact strict sensitive from=\"/aTis/outcome\" to=\"/aTis\" />\n      )}\n    </Route>\n    <Route exact sensitive path=\"/aTis/test\" component={QuestionsTablet} />\n    <Route path=\"*\" component={Main} />\n  </Switch>\n));\n","export const initialState = {\n  availableTopics: [],\n  test: {},\n  answers: [],\n  isLoading: false,\n  reqResponse: {},\n};\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n\n        if (installingWorker == null) {\n          return;\n        }\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { App } from './App';\nimport { reducer } from './store/reducer';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Router forceRefresh={false} keyLength={12}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('react-root')\n);\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nserviceWorker.register();\n","import { initialState } from './initialState';\nimport * as actionTypes from './actionTypes';\nimport { parseError } from '../utilities/utilities';\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_ANSWER:\n      if (state.answers[action.questionNumber] !== action.optionNumber) {\n        const updatedAnswers = [...state.answers];\n        updatedAnswers[action.questionNumber] = action.optionNumber;\n        return { ...state, answers: updatedAnswers };\n      }\n      return state;\n\n    case actionTypes.INITIALIZE_REQUEST:\n      return { ...state, isLoading: true };\n\n    case actionTypes.GET_TOPICS_REQUEST:\n      return {\n        ...state,\n        availableTopics: action.payload,\n        isLoading: false,\n        reqResponse: { reqFailed: false },\n      };\n\n    case actionTypes.GET_TEST_REQUEST:\n      return {\n        ...state,\n        test: action.payload,\n        isLoading: false,\n        reqResponse: { reqFailed: false },\n      };\n\n    case actionTypes.POST_ANSWER_REQUEST:\n      return {\n        ...state,\n        test: {},\n        answers: [],\n        isLoading: false,\n        reqResponse: { ...action.payload, reqFailed: false },\n      };\n\n    case actionTypes.REQUEST_FAILURE:\n      return {\n        ...state,\n        test: {},\n        answers: [],\n        isLoading: false,\n        reqResponse: {\n          ...parseError(action.payload),\n          reqFailed: true,\n        },\n      };\n\n    case actionTypes.CLEAR_STATE:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"Autocomplete_inputField__19i-H\",\"active\":\"Autocomplete_active__25uXo\",\"inactive\":\"Autocomplete_inactive__-p_VL\",\"continueWrapper\":\"Autocomplete_continueWrapper__E99tO\",\"options\":\"Autocomplete_options__32BPF\",\"optionActive\":\"Autocomplete_optionActive__BfE9m\",\"noShow\":\"Autocomplete_noShow__3vTZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionsWrapper\":\"QuestionsTablet_questionsWrapper__1fS4C\",\"questions\":\"QuestionsTablet_questions__2WxQD\",\"title\":\"QuestionsTablet_title__2RZ9E\",\"author\":\"QuestionsTablet_author__16q5q\",\"questionsReturn\":\"QuestionsTablet_questionsReturn__SDy6u\",\"backToTopWrapper\":\"QuestionsTablet_backToTopWrapper__1sKZh\",\"returnWrapper\":\"QuestionsTablet_returnWrapper__2xOIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outcome\":\"Outcome_outcome__XAoEu\",\"image\":\"Outcome_image__1Ipwo\",\"onFailure\":\"Outcome_onFailure__BsfsD\",\"status\":\"Outcome_status__3PnwX\",\"topic\":\"Outcome_topic__1b8v8\",\"message\":\"Outcome_message__M0G3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"Question_question__1Joyc\",\"indicator\":\"Question_indicator__1JFCy\",\"inactive\":\"Question_inactive__3p87E\",\"questionText\":\"Question_questionText__1QfqT\",\"answerTitle\":\"Question_answerTitle__1tHsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrowTop\":\"ControlButton_arrowTop__1Z2BW\",\"arrowRight\":\"ControlButton_arrowRight__1rR7i\",\"arrowBottom\":\"ControlButton_arrowBottom__2gaaY\",\"arrowLeft\":\"ControlButton_arrowLeft__qFRij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3JhNz\",\"title\":\"Main_title__2sJBY\",\"footer\":\"Main_footer__3AekE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"Option_option__3JaSi\",\"active\":\"Option_active__13yNC\"};","module.exports = __webpack_public_path__ + \"static/media/outcomeImage.e6e4d7b7.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__19g0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__32FwK\"};"],"sourceRoot":""}